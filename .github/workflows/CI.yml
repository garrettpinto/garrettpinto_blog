name: CI
on:
  workflow_dispatch:
    branches:
      - master
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  AWS-DEFAULT-REGION: us-east-1
  SITE-BRANCH: site

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master branch
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          ref: master
      - name: Install Hugo
        run: |
          wget https://github.com/gohugoio/hugo/releases/download/v0.74.3/hugo_0.74.3_Linux-64bit.deb
          sudo dpkg -i hugo_0.74.3_Linux-64bit.deb
      - name: Build site with Hugo
        run: hugo
      - name: Upload output public dir as artifact
        uses: actions/upload-artifact@v1
        with:
          name: public
          path: public/
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout site branch
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ env.SITE-BRANCH }}
      - name: Download artifact from build stage
        uses: actions/download-artifact@v1
        with:
          name: public
      - name: Commit files
        id: can_commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A public/
          commit_message=$(git commit -m "Publish generated Hugo site." -a | tr -d '\n' || true)
          echo "::set-output name=commit_message::$commit_message"
      - name: Nothing to commit
        id: nothing_committed
        if: contains(steps.can_commit.outputs.commit_message, 'nothing to commit')
        run: echo "Saw that no changes were made to Hugo site."
      - name: Push to site branch
        if: steps.nothing_committed.conclusion == 'skipped'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.SITE-BRANCH }}
      - name: Configure AWS credentials
        if: steps.nothing_committed.conclusion == 'skipped'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS-DEFAULT-REGION }}
      - name: Delta sync site to S3 with aws cli
        if: steps.nothing_committed.conclusion == 'skipped'
        run: aws s3 sync --size-only --delete public/ s3://${{ secrets.AWS_S3_BUCKET_NAME }}
      - name: Invalidate cache on CloudFront
        if: steps.nothing_committed.conclusion == 'skipped'
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRO_ID }} --paths "/*"
